{
  "name": "ide-go",
  "main": "./lib/ide-go",
  "version": "0.7.0",
  "description": "Go language support for Atom-IDE.",
  "repository": "https://github.com/ckaznocha/ide-go",
  "author": {
    "name": "Clifton Kaznocha",
    "email": "clifton@kaznocha.com",
    "url": "https://clifton.kaznocha.com/"
  },
  "homepage": "https://atom.io/packages/ide-go",
  "bugs": {
    "url": "https://github.com/ckaznocha/ide-go/issues"
  },
  "keywords": [
    "atom-ide",
    "go",
    "go-langserver",
    "golang",
    "language-server-protocol",
    "lsp"
  ],
  "license": "MIT",
  "engines": {
    "atom": ">=1.0.0 <2.0.0"
  },
  "dependencies": {
    "atom-languageclient": "^0.9.1",
    "atom-package-deps": "^4.6.0",
    "@types/atom": "^1.24.1",
    "@types/electron": "^1.6.10",
    "@types/node": "^10.0.3",
    "atom-ts-transpiler": "^1.4.2",
    "typescript": "^2.7.1"
  },
  "enhancedScopes": [
    "source.go"
  ],
  "package-deps": [
    "go-plus"
  ],
  "consumedServices": {
    "linter-indie": {
      "versions": {
        "2.0.0": "consumeLinterV2"
      }
    },
    "datatip": {
      "versions": {
        "0.1.0": "consumeDatatip"
      }
    },
    "signature-help": {
      "versions": {
        "0.1.0": "consumeSignatureHelp"
      }
    },
    "go-config": {
      "versions": {
        "1.0.0": "consumeGoConfig"
      }
    },
    "go-get": {
      "versions": {
        "2.0.0": "consumeGoGet"
      }
    }
  },
  "providedServices": {
    "autocomplete.provider": {
      "versions": {
        "2.0.0": "provideAutocomplete"
      }
    },
    "code-format.file": {
      "versions": {
        "0.1.0": "provideFileCodeFormat"
      }
    },
    "definitions": {
      "versions": {
        "0.1.0": "provideDefinitions"
      }
    },
    "find-references": {
      "versions": {
        "0.1.0": "provideFindReferences"
      }
    },
    "outline-view": {
      "versions": {
        "0.1.0": "provideOutlines"
      }
    }
  },
  "atomTranspilers": [
    {
      "transpiler": "atom-ts-transpiler",
      "glob": "{!(node_modules)/**/,}*.ts?(x)",
      "options": {
        "compilerOptions": {},
        "cacheKeyFiles": [],
        "verbose": false
      }
    }
  ]
}
